services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      # Mount individual config files to prevent container file leakage
      - ./hadoop-config/core-site.xml:/opt/hadoop-3.2.1/etc/hadoop/core-site.xml:ro
      - ./hadoop-config/hdfs-site.xml:/opt/hadoop-3.2.1/etc/hadoop/hdfs-site.xml:ro
      - ./hadoop-config/yarn-site.xml:/opt/hadoop-3.2.1/etc/hadoop/yarn-site.xml:ro
      - ./hadoop-config/mapred-site.xml:/opt/hadoop-3.2.1/etc/hadoop/mapred-site.xml:ro
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - CORE_CONF_hadoop_http_staticuser_user=root
      - CORE_CONF_hadoop_proxyuser_hue_hosts=*
      - CORE_CONF_hadoop_proxyuser_hue_groups=*
      - CORE_CONF_io_compression_codecs=org.apache.hadoop.io.compress.SnappyCodec
      - HDFS_CONF_dfs_webhdfs_enabled=true
      - HDFS_CONF_dfs_permissions_enabled=false
      - HDFS_CONF_dfs_namenode_datanode_registration_ip___hostname___check=false
      - HADOOP_NAMENODE_OPTS=-Xms512m -Xmx1g
    networks:
      - hadoop

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    ports:
      - "9864:9864"
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
      # Mount individual config files to prevent container file leakage
      - ./hadoop-config/core-site.xml:/opt/hadoop-3.2.1/etc/hadoop/core-site.xml:ro
      - ./hadoop-config/hdfs-site.xml:/opt/hadoop-3.2.1/etc/hadoop/hdfs-site.xml:ro
      - ./hadoop-config/yarn-site.xml:/opt/hadoop-3.2.1/etc/hadoop/yarn-site.xml:ro
      - ./hadoop-config/mapred-site.xml:/opt/hadoop-3.2.1/etc/hadoop/mapred-site.xml:ro
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
      CORE_CONF_hadoop_http_staticuser_user: root
      CORE_CONF_hadoop_proxyuser_hue_hosts: "*"
      CORE_CONF_hadoop_proxyuser_hue_groups: "*"
      CORE_CONF_io_compression_codecs: org.apache.hadoop.io.compress.SnappyCodec
      HDFS_CONF_dfs_webhdfs_enabled: "true"
      HDFS_CONF_dfs_permissions_enabled: "false"
      HDFS_CONF_dfs_namenode_datanode_registration_ip___hostname___check: "false"
      HADOOP_DATANODE_OPTS: "-Xms256m -Xmx512m"
    networks:
      - hadoop

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    ports:
      - 8088:8088
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
      CORE_CONF_hadoop_http_staticuser_user: root
      CORE_CONF_hadoop_proxyuser_hue_hosts: "*"
      CORE_CONF_hadoop_proxyuser_hue_groups: "*"
      CORE_CONF_io_compression_codecs: org.apache.hadoop.io.compress.SnappyCodec
      HDFS_CONF_dfs_webhdfs_enabled: "true"
      HDFS_CONF_dfs_permissions_enabled: "false"
      YARN_CONF_yarn_log___aggregation___enable: "true"
      YARN_CONF_yarn_log_server_url: http://historyserver:8188/applicationhistory/logs/
      YARN_CONF_yarn_resourcemanager_recovery_enabled: "true"
      YARN_CONF_yarn_resourcemanager_store_class: org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore
      YARN_CONF_yarn_resourcemanager_scheduler_class: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler
      YARN_CONF_yarn_scheduler_capacity_root_default_maximum___allocation___mb: "8192"
      YARN_CONF_yarn_scheduler_capacity_root_default_maximum___allocation___vcores: "4"
      YARN_CONF_yarn_resourcemanager_fs_state___store_uri: /rmstate
      YARN_CONF_yarn_resourcemanager_system___metrics___publisher_enabled: "true"
      YARN_CONF_yarn_resourcemanager_hostname: resourcemanager
      YARN_CONF_yarn_resourcemanager_address: resourcemanager:8032
      YARN_CONF_yarn_resourcemanager_scheduler_address: resourcemanager:8030
      YARN_CONF_yarn_resourcemanager_resource___tracker_address: resourcemanager:8031
      YARN_CONF_yarn_timeline___service_enabled: "true"
      YARN_CONF_yarn_timeline___service_generic___application___history_enabled: "true"
      YARN_CONF_yarn_timeline___service_hostname: historyserver
      YARN_CONF_mapreduce_map_output_compress: "true"
      YARN_CONF_mapred_map_output_compress_codec: org.apache.hadoop.io.compress.SnappyCodec
      YARN_CONF_yarn_nodemanager_resource_memory___mb: "16384"
      YARN_CONF_yarn_nodemanager_resource_cpu___vcores: "8"
      YARN_CONF_yarn_nodemanager_disk___health___checker_max___disk___utilization___per___disk___percentage: "98.5"
      YARN_CONF_yarn_nodemanager_remote___app___log___dir: /app-logs
      YARN_CONF_yarn_nodemanager_aux___services: mapreduce_shuffle
    volumes:
      # Mount individual config files to prevent container file leakage
      - ./hadoop-config/core-site.xml:/opt/hadoop-3.2.1/etc/hadoop/core-site.xml:ro
      - ./hadoop-config/hdfs-site.xml:/opt/hadoop-3.2.1/etc/hadoop/hdfs-site.xml:ro
      - ./hadoop-config/yarn-site.xml:/opt/hadoop-3.2.1/etc/hadoop/yarn-site.xml:ro
      - ./hadoop-config/mapred-site.xml:/opt/hadoop-3.2.1/etc/hadoop/mapred-site.xml:ro
    networks:
      - hadoop

  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    ports:
      - "8042:8042"
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
      CORE_CONF_hadoop_http_staticuser_user: root
      CORE_CONF_hadoop_proxyuser_hue_hosts: "*"
      CORE_CONF_hadoop_proxyuser_hue_groups: "*"
      CORE_CONF_io_compression_codecs: org.apache.hadoop.io.compress.SnappyCodec
      HDFS_CONF_dfs_webhdfs_enabled: "true"
      HDFS_CONF_dfs_permissions_enabled: "false"
      YARN_CONF_yarn_log___aggregation___enable: "true"
      YARN_CONF_yarn_log_server_url: http://historyserver:8188/applicationhistory/logs/
      YARN_CONF_yarn_resourcemanager_recovery_enabled: "true"
      YARN_CONF_yarn_resourcemanager_store_class: org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore
      YARN_CONF_yarn_resourcemanager_scheduler_class: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler
      YARN_CONF_yarn_scheduler_capacity_root_default_maximum___allocation___mb: "8192"
      YARN_CONF_yarn_scheduler_capacity_root_default_maximum___allocation___vcores: "4"
      YARN_CONF_yarn_resourcemanager_fs_state___store_uri: /rmstate
      YARN_CONF_yarn_resourcemanager_system___metrics___publisher_enabled: "true"
      YARN_CONF_yarn_resourcemanager_hostname: resourcemanager
      YARN_CONF_yarn_resourcemanager_address: resourcemanager:8032
      YARN_CONF_yarn_resourcemanager_scheduler_address: resourcemanager:8030
      YARN_CONF_yarn_resourcemanager_resource___tracker_address: resourcemanager:8031
      YARN_CONF_yarn_timeline___service_enabled: "true"
      YARN_CONF_yarn_timeline___service_generic___application___history_enabled: "true"
      YARN_CONF_yarn_timeline___service_hostname: historyserver
      YARN_CONF_mapreduce_map_output_compress: "true"
      YARN_CONF_mapred_map_output_compress_codec: org.apache.hadoop.io.compress.SnappyCodec
      YARN_CONF_yarn_nodemanager_resource_memory___mb: "16384"
      YARN_CONF_yarn_nodemanager_resource_cpu___vcores: "8"
      YARN_CONF_yarn_nodemanager_disk___health___checker_max___disk___utilization___per___disk___percentage: "98.5"
      YARN_CONF_yarn_nodemanager_remote___app___log___dir: /app-logs
      YARN_CONF_yarn_nodemanager_aux___services: mapreduce_shuffle
    volumes:
      # Mount individual config files to prevent container file leakage
      - ./hadoop-config/core-site.xml:/opt/hadoop-3.2.1/etc/hadoop/core-site.xml:ro
      - ./hadoop-config/hdfs-site.xml:/opt/hadoop-3.2.1/etc/hadoop/hdfs-site.xml:ro
      - ./hadoop-config/yarn-site.xml:/opt/hadoop-3.2.1/etc/hadoop/yarn-site.xml:ro
      - ./hadoop-config/mapred-site.xml:/opt/hadoop-3.2.1/etc/hadoop/mapred-site.xml:ro
    networks:
      - hadoop

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    ports:
      - 8188:8188
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
      CORE_CONF_hadoop_http_staticuser_user: root
      CORE_CONF_hadoop_proxyuser_hue_hosts: "*"
      CORE_CONF_hadoop_proxyuser_hue_groups: "*"
      CORE_CONF_io_compression_codecs: org.apache.hadoop.io.compress.SnappyCodec
      HDFS_CONF_dfs_webhdfs_enabled: "true"
      HDFS_CONF_dfs_permissions_enabled: "false"
      YARN_CONF_yarn_log___aggregation___enable: "true"
      YARN_CONF_yarn_log_server_url: http://historyserver:8188/applicationhistory/logs/
      YARN_CONF_yarn_resourcemanager_recovery_enabled: "true"
      YARN_CONF_yarn_resourcemanager_store_class: org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore
      YARN_CONF_yarn_resourcemanager_scheduler_class: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler
      YARN_CONF_yarn_scheduler_capacity_root_default_maximum___allocation___mb: "8192"
      YARN_CONF_yarn_scheduler_capacity_root_default_maximum___allocation___vcores: "4"
      YARN_CONF_yarn_resourcemanager_fs_state___store_uri: /rmstate
      YARN_CONF_yarn_resourcemanager_system___metrics___publisher_enabled: "true"
      YARN_CONF_yarn_resourcemanager_hostname: resourcemanager
      YARN_CONF_yarn_resourcemanager_address: resourcemanager:8032
      YARN_CONF_yarn_resourcemanager_scheduler_address: resourcemanager:8030
      YARN_CONF_yarn_resourcemanager_resource___tracker_address: resourcemanager:8031
      YARN_CONF_yarn_timeline___service_enabled: "true"
      YARN_CONF_yarn_timeline___service_generic___application___history_enabled: "true"
      YARN_CONF_yarn_timeline___service_hostname: historyserver
      YARN_CONF_mapreduce_map_output_compress: "true"
      YARN_CONF_mapred_map_output_compress_codec: org.apache.hadoop.io.compress.SnappyCodec
      YARN_CONF_yarn_nodemanager_resource_memory___mb: "16384"
      YARN_CONF_yarn_nodemanager_resource_cpu___vcores: "8"
      YARN_CONF_yarn_nodemanager_disk___health___checker_max___disk___utilization___per___disk___percentage: "98.5"
      YARN_CONF_yarn_nodemanager_remote___app___log___dir: /app-logs
      YARN_CONF_yarn_nodemanager_aux___services: mapreduce_shuffle
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
      # Mount individual config files to prevent container file leakage
      - ./hadoop-config/core-site.xml:/opt/hadoop-3.2.1/etc/hadoop/core-site.xml:ro
      - ./hadoop-config/hdfs-site.xml:/opt/hadoop-3.2.1/etc/hadoop/hdfs-site.xml:ro
      - ./hadoop-config/yarn-site.xml:/opt/hadoop-3.2.1/etc/hadoop/yarn-site.xml:ro
      - ./hadoop-config/mapred-site.xml:/opt/hadoop-3.2.1/etc/hadoop/mapred-site.xml:ro
    networks:
      - hadoop

  spark-master:
    image: bitnami/spark:3.5.4
    container_name: spark-master
    restart: always
    ports:
      - 8080:8080
      - 7077:7077
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT_NUMBER=7077
      - SPARK_MASTER_WEBUI_PORT=8080
    volumes:
      - ./data:/data
      - spark_work:/opt/bitnami/spark/work
      - spark_logs:/opt/bitnami/spark/logs
    networks:
      - hadoop

  spark-worker-1:
    image: bitnami/spark:3.5.4
    container_name: spark-worker-1
    restart: always
    ports:
      - 8081:8081
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2g
      - SPARK_WORKER_WEBUI_PORT=8081
    volumes:
      - ./data:/data
      - spark_worker1_work:/opt/bitnami/spark/work
      - spark_worker1_logs:/opt/bitnami/spark/logs
    depends_on:
      - spark-master
    networks:
      - hadoop

  spark-worker-2:
    image: bitnami/spark:3.5.4
    container_name: spark-worker-2
    restart: always
    ports:
      - 8082:8081
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=3g
      - SPARK_WORKER_WEBUI_PORT=8081
    volumes:
      - ./data:/data
      - spark_worker2_work:/opt/bitnami/spark/work
      - spark_worker2_logs:/opt/bitnami/spark/logs
    depends_on:
      - spark-master
    networks:
      - hadoop

  postgres:
    image: postgres:13
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: metastore
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hadoop

  hive:
    image: apache/hive:4.0.0
    container_name: hive
    restart: always
    ports:
      - "10000:10000"
      - "10002:10002"
    environment:
      SERVICE_NAME: hiveserver2
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
      CORE_CONF_hadoop_http_staticuser_user: root
      HDFS_CONF_dfs_webhdfs_enabled: "true"
      HDFS_CONF_dfs_permissions_enabled: "false"
    depends_on:
      - namenode
      - datanode
    networks:
      - hadoop

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    restart: always
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 24
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    volumes:
      - kafka_data:/tmp/kraft-combined-logs
    networks:
      - hadoop


volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:
  postgres_data:
  kafka_data:
  spark_work:
  spark_logs:
  spark_worker1_work:
  spark_worker1_logs:
  spark_worker2_work:
  spark_worker2_logs:

networks:
  hadoop:
    driver: bridge
